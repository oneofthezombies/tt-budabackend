# test_config_id=$TEMPLATE_test_config_id
devices:
  arch: $TEMPLATE_arch_name

queues:
  input0_dram:
    type: ram
    input: HOST
    entries: $TEMPLATE_input0_dram_entries
    grid_size: [$TEMPLATE_input0_dram_grid_size_r, $TEMPLATE_input0_dram_grid_size_c]
    t: $TEMPLATE_input0_dram_t
    mblock: [$TEMPLATE_input0_dram_mb_r, $TEMPLATE_input0_dram_mb_c]
    ublock: [$TEMPLATE_input0_dram_ub_r, $TEMPLATE_input0_dram_ub_c]
    df: $TEMPLATE_input0_dram_df
    ublock_order: $TEMPLATE_input0_dram_ublock_orders
    target_device: 0
    loc: $TEMPLATE_input0_dram_loc
    $TEMPLATE_input0_dram_loc: $TEMPLATE_input0_dram_buffers

  output_dram:
    type: queue
    input: drainer_op
    entries: $TEMPLATE_output_dram_entries
    grid_size: [$TEMPLATE_output_dram_grid_size_r, $TEMPLATE_output_dram_grid_size_c]
    t: $TEMPLATE_output_dram_t
    mblock: [$TEMPLATE_output_dram_mb_r, $TEMPLATE_output_dram_mb_c]
    ublock: [$TEMPLATE_output_dram_ub_r, $TEMPLATE_output_dram_ub_c]
    df: $TEMPLATE_output_dram_df
    ublock_order: $TEMPLATE_output_dram_ublock_order
    target_device: 0
    loc: $TEMPLATE_output_dram_loc
    $TEMPLATE_output_dram_loc: $TEMPLATE_output_dram_buffers

graphs:
  test_op:
    target_device: 0
    input_count: $TEMPLATE_microbatch_size
    feeder_op:
      type: datacopy
      grid_loc: [$TEMPLATE_feeder_op_loc_r, $TEMPLATE_feeder_op_loc_c]
      grid_size: [$TEMPLATE_feeder_op_grid_size_r, $TEMPLATE_feeder_op_grid_size_c]
      input_dram_io_buf_size_tiles: [600] # hack to make sure pipegen doesn't split to 2 streams
      inputs: [input0_dram]
      in_df: [$TEMPLATE_feeder_op_in0_df]
      acc_df: $TEMPLATE_feeder_op_acc_df
      out_df: $TEMPLATE_feeder_op_out_df
      intermed_df: $TEMPLATE_feeder_op_intermed_df
      ublock_order: $TEMPLATE_feeder_op_ublock_order
      buf_size_mb: $TEMPLATE_feeder_op_buf_size_mb
      math_fidelity: $TEMPLATE_math_fidelity
      t: $TEMPLATE_feeder_op_t
      mblock: [$TEMPLATE_feeder_op_mb_r, $TEMPLATE_feeder_op_mb_c]
      ublock: [$TEMPLATE_feeder_op_ub_r, $TEMPLATE_feeder_op_ub_c]
    target_op:
      type: datacopy
      grid_loc: [$TEMPLATE_target_op_loc_r, $TEMPLATE_target_op_loc_c]
      grid_size: [$TEMPLATE_target_op_grid_size_r, $TEMPLATE_target_op_grid_size_c]
      inputs: [feeder_op]
      in_df: [$TEMPLATE_target_op_in0_df]
      acc_df: $TEMPLATE_target_op_acc_df
      out_df: $TEMPLATE_target_op_out_df
      intermed_df: $TEMPLATE_target_op_intermed_df
      ublock_order: $TEMPLATE_target_op_ublock_order
      buf_size_mb: $TEMPLATE_target_op_buf_size_mb
      math_fidelity: $TEMPLATE_math_fidelity
      t: $TEMPLATE_target_op_t
      mblock: [$TEMPLATE_target_op_mb_r, $TEMPLATE_target_op_mb_c]
      ublock: [$TEMPLATE_target_op_ub_r, $TEMPLATE_target_op_ub_c]
    drainer_op:
      type: datacopy
      grid_loc: [$TEMPLATE_drainer_op_loc_r, $TEMPLATE_drainer_op_loc_c]
      grid_size: [$TEMPLATE_drainer_op_grid_size_r, $TEMPLATE_drainer_op_grid_size_c]
      inputs: [target_op]
      in_df: [$TEMPLATE_drainer_op_in0_df]
      acc_df: $TEMPLATE_drainer_op_acc_df
      out_df: $TEMPLATE_drainer_op_out_df
      intermed_df: $TEMPLATE_drainer_op_intermed_df
      ublock_order: $TEMPLATE_drainer_op_ublock_order
      buf_size_mb: $TEMPLATE_drainer_op_buf_size_mb
      math_fidelity: $TEMPLATE_math_fidelity
      untilize_output: $TEMPLATE_drainer_op_untilize_output
      t: $TEMPLATE_drainer_op_t
      mblock: [$TEMPLATE_drainer_op_mb_r, $TEMPLATE_drainer_op_mb_c]
      ublock: [$TEMPLATE_drainer_op_ub_r, $TEMPLATE_drainer_op_ub_c]

programs:
  - program0:
    - var: [$c_microbatch_count, $c_zero]
    - varinst: [$c_microbatch_count, set, $TEMPLATE_microbatch_count]
    - varinst: [$c_zero, set, 0]
    - loop: $c_microbatch_count #loop over number of microbatches that make a minibatch
    -   execute: {
          graph_name: test_op,
          queue_settings: {
               input0_dram: {
                prologue: $TEMPLATE_input0_dram_prologue,
                epilogue: false,
                zero: false,
                rd_ptr_global: $c_zero,
                wr_ptr_global: $c_zero,
              }
          }
        }
    - endloop

test-config:
  test-args:
    microbatch_count: $TEMPLATE_microbatch_count # entries / input_count
    microbatch_size: $TEMPLATE_microbatch_size # input_count
    minibatch_count: $TEMPLATE_minibatch_count # host loop iterations